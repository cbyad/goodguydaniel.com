{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog-core/templates/post-query.tsx","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["shadow","map","v","Post","post","data","shareHint","siteUrl","path","text","url","sx","mt","fontSize","href","rel","target","title","style","textDecoration","renderTwitterShareHint","useSiteMetadata","slug","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","variant","parent","frontmatter","subtitle","color","a","date","tags","Fragment","timeToRead","my","boxShadow","join","body","query","PostComponent","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","ItemTags","useMinimalBlogConfig","tagsPath","basePath","tag","i","key","as","Link","to","replaceSlashes","name","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","fn"],"mappings":"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","file":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-post-query-tsx-f79cbd68de06dc3e07ff.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link } from \"theme-ui\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport React, { FC } from \"react\";\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\";\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\";\n\ntype PostProps = {\n  data: {\n    post: {\n      slug: string;\n      title: string;\n      date: string;\n      tags?: {\n        name: string;\n        slug: string;\n      }[];\n      description?: string;\n      body: string;\n      excerpt: string;\n      timeToRead?: number;\n      banner?: {\n        childImageSharp: {\n          resize: {\n            src: string;\n          };\n        };\n      };\n      parent?: {\n        frontmatter?: {\n          subtitle?: string;\n        };\n      };\n    };\n  };\n};\n\nconst px = [`32px`, `16px`, `8px`, `4px`];\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`);\nconst TWITTER_HANDLER = \"_danielcaldas\";\n\nfunction renderTwitterShareHint(siteUrl: string, path: string, text: string): string {\n  const fullUrl = `${siteUrl}${path}`;\n  const url = `http://twitter.com/share?text=${text}&url=${fullUrl}&via=${TWITTER_HANDLER}`;\n\n  return (\n    <p\n      sx={{\n        mt: 3,\n        fontSize: [1, 1, 2],\n      }}\n    >\n      If you liked this article, consider sharing (\n      <Link href={url} rel=\"noreferrer\" target=\"_blank\" title=\"tweeting\">\n        <span style={{ textDecoration: \"underline\" }}>tweeting</span>\n      </Link>\n      ) it to your followers.\n    </p>\n  );\n}\n\nconst Post = ({ data: { post } }: PostProps): FC => {\n  const { siteUrl } = useSiteMetadata();\n  const shareHint = renderTwitterShareHint(siteUrl, post.slug, post.title);\n\n  return (\n    <Layout>\n      <SEO\n        title={post.title}\n        description={post.description ? post.description : post.excerpt}\n        image={post.banner ? post.banner.childImageSharp.resize.src : undefined}\n        pathname={post.slug}\n      />\n      <Heading variant=\"styles.h2\">{post.title}</Heading>\n      {post.parent.frontmatter.subtitle && <Heading variant=\"styles.h4\">{post.parent.frontmatter.subtitle}</Heading>}\n      <p\n        sx={{\n          color: `secondary`,\n          mt: 3,\n          a: { color: `secondary` },\n          fontSize: [1, 1, 2],\n        }}\n      >\n        <time>{post.date}</time>\n        {post.tags && (\n          <React.Fragment>\n            {` — `}\n            <ItemTags tags={post.tags} />\n          </React.Fragment>\n        )}\n        {post.timeToRead && ` — `}\n        {post.timeToRead && <span>{post.timeToRead} min read</span>}\n      </p>\n      <section\n        sx={{\n          my: 5,\n          \".gatsby-resp-image-wrapper\": {\n            my: [4, 4, 5],\n            boxShadow: shadow.join(`, `),\n          },\n        }}\n      >\n        <MDXRenderer>{post.body}</MDXRenderer>\n        {shareHint}\n      </section>\n    </Layout>\n  );\n};\n\nexport default Post;\n","import { graphql } from \"gatsby\";\nimport PostComponent from \"@lekoarts/gatsby-theme-minimal-blog/src/components/post\";\n\nexport default PostComponent;\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    post(slug: { eq: $slug }) {\n      slug\n      title\n      date(formatString: $formatString)\n      tags {\n        name\n        slug\n      }\n      description\n      body\n      excerpt\n      timeToRead\n      banner {\n        childImageSharp {\n          resize(width: 1200, quality: 90) {\n            src\n          }\n        }\n      }\n      ... on MdxPost {\n        parent {\n          ... on Mdx {\n            frontmatter {\n              subtitle\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}